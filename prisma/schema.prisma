// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  googleId String    @unique
  email    String    @unique
  name     String
  Session  Session[]

  @@index([googleId])
}

model Session {
  id        String @id
  userId    Int
  expiresAt Int

  user User @relation(fields: [userId], references: [id])
}

//
// model Post {
//   id        Int     @id @default(autoincrement())
//   title     String
//   content   String?
//   published Boolean @default(false)
//   authorId  Int
//   author    User    @relation(fields: [authorId], references: [id])
//
//   @@index([authorId])
// }

// model Player {
//   id    Int              @id @default(autoincrement())
//   name  String?
//   games PlayersOnGames[]
//   Score Score[]
// }
//
// model Game {
//   id      Int              @id @default(autoincrement())
//   slug    String           @unique
//   hostId  Int
//   rounds  Round[]
//   players PlayersOnGames[]
// }
//
// model PlayersOnGames {
//   player   Player  @relation(fields: [playerId], references: [id])
//   playerId Int
//   game     Game    @relation(fields: [gameId], references: [id])
//   gameId   Int
//   isHost   Boolean
//
//   @@id([playerId, gameId])
// }
//
// model Round {
//   id         Int     @id @default(autoincrement())
//   descripton String
//   scale      String
//   scores     Score[]
//   game       Game    @relation(fields: [gameId], references: [id])
//   gameId     Int
// }
//
// model Score {
//   id       Int    @id @default(autoincrement())
//   player   Player @relation(fields: [playerId], references: [id])
//   playerId Int
//   round    Round  @relation(fields: [roundId], references: [id])
//   roundId  Int
//   score    String
// }

model Game {
  id              Int      @id @default(autoincrement())
  code            String   @unique
  owner           Int
  document        Json
  createdDate     DateTime
  lastUpdatedDate DateTime

  @@index([owner])
  @@index([createdDate])
  @@index([lastUpdatedDate])
}
